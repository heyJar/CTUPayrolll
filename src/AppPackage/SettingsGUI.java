/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AppPackage;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author acer
 */
public class SettingsGUI extends javax.swing.JFrame {

    /**
     * Creates new form AnnouncementsGUI
     */
    dbConnect dbC = new dbConnect();
    
    int yMouse;
    int xMouse;
    Connection conn = null;
    PreparedStatement stmt = null;
    Statement xstmt = null;
    String sql = "SELECT * FROM empType";
    public SettingsGUI() {
        initComponents();
        setTitle("CTU Employee Information System");
        setIconImage(new ImageIcon(getClass().getResource("/imgPackage/edtrps32x32.png")).getImage());
        SRoot.setVisible(false);
        
    }
    
public static boolean isNumeric(String str)  
    {  
      try  
      {  
        double d = Double.parseDouble(str);  
      }  
      catch(NumberFormatException nfe)  
      {  
        return false;  
      }  
      return true;  
    }

    
    public ArrayList<JobTypes> getJobTypeList() {
        
            ArrayList<JobTypes> JobTypeList = new ArrayList<JobTypes>();
            conn = dbC.getConnection();
            
            
            ResultSet rs;
        
        try {
            xstmt = conn.createStatement();
            rs = xstmt.executeQuery(sql);
            
            JobTypes jobtypes;
            
            while(rs.next()) {
                String id  = rs.getString("id");
                String name = rs.getString("typeName");
                String rate = rs.getString("hourlyRate");

                
                jobtypes = new JobTypes(id,name,rate);
                JobTypeList.add(jobtypes);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EmployeeMgmt.class.getName()).log(Level.SEVERE, null, ex);
        }
        return JobTypeList; 
    }
    

    
    public void ViewJTList() {
        ArrayList<JobTypes> list = getJobTypeList();
        DefaultTableModel model = (DefaultTableModel)JobTypesTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[3];
                for(int i = 0; i < list.size(); i++) {
                    row[0] = list.get(i).getId();
                    row[1] = list.get(i).getName();
                    row[2] = list.get(i).getRate();
                    
                    model.addRow(row);
                }
    }
   
    public void ShowItem(int index) {
        JTId.setText(getJobTypeList().get(index).getId());
        JTName.setText(getJobTypeList().get(index).getName());
        JTRate.setText(getJobTypeList().get(index).getRate());
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        winClose = new javax.swing.JLabel();
        winMin = new javax.swing.JLabel();
        navAttendance = new javax.swing.JLabel();
        winDrag = new javax.swing.JLabel();
        backHome = new javax.swing.JLabel();
        searchBar = new javax.swing.JTextField();
        SRoot = new javax.swing.JPanel();
        SJobTypes = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        JobTypesTable = new javax.swing.JTable();
        JTRate = new javax.swing.JTextField();
        JTName = new javax.swing.JTextField();
        updateBtn = new javax.swing.JLabel();
        addBtn = new javax.swing.JLabel();
        JobsBG = new javax.swing.JLabel();
        JTId = new javax.swing.JLabel();
        SHome = new javax.swing.JLabel();
        SJobs = new javax.swing.JLabel();
        SettingsBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        winClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        winClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                winCloseMouseClicked(evt);
            }
        });
        getContentPane().add(winClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(998, 10, 22, 20));

        winMin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        winMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                winMinMouseClicked(evt);
            }
        });
        getContentPane().add(winMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(965, 10, 22, 20));

        navAttendance.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        navAttendance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                navAttendanceMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                navAttendanceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                navAttendanceMouseExited(evt);
            }
        });
        getContentPane().add(navAttendance, new org.netbeans.lib.awtextra.AbsoluteConstraints(892, 48, 125, 25));

        winDrag.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                winDragMouseDragged(evt);
            }
        });
        winDrag.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                winDragMousePressed(evt);
            }
        });
        getContentPane().add(winDrag, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1025, 85));

        backHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backHomeMouseClicked(evt);
            }
        });
        getContentPane().add(backHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 60, 30));

        searchBar.setEditable(false);
        searchBar.setBackground(new java.awt.Color(31, 37, 61));
        searchBar.setFont(new java.awt.Font("Ubuntu", 0, 16)); // NOI18N
        searchBar.setForeground(new java.awt.Color(255, 255, 255));
        searchBar.setBorder(null);
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });
        getContentPane().add(searchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(732, 98, 250, 28));

        SRoot.setBackground(new java.awt.Color(31, 37, 61));
        SRoot.setLayout(new java.awt.CardLayout());

        SJobTypes.setBackground(new java.awt.Color(31, 37, 61));
        SJobTypes.setMaximumSize(new java.awt.Dimension(45, 24));
        SJobTypes.setMinimumSize(new java.awt.Dimension(45, 24));
        SJobTypes.setPreferredSize(new java.awt.Dimension(45, 24));
        SJobTypes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JobTypesTable.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        JobTypesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Rate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JobTypesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JobTypesTableMouseClicked(evt);
            }
        });
        tableScrollPane.setViewportView(JobTypesTable);

        SJobTypes.add(tableScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 118, 563, 190));

        JTRate.setFont(new java.awt.Font("Ubuntu Light", 0, 13)); // NOI18N
        JTRate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JTRate.setBorder(null);
        JTRate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                JTRatePropertyChange(evt);
            }
        });
        SJobTypes.add(JTRate, new org.netbeans.lib.awtextra.AbsoluteConstraints(455, 350, 163, 40));

        JTName.setFont(new java.awt.Font("Ubuntu Light", 0, 13)); // NOI18N
        JTName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JTName.setBorder(null);
        SJobTypes.add(JTName, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 349, 163, 40));

        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBtnMouseClicked(evt);
            }
        });
        SJobTypes.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 421, 160, 50));

        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });
        SJobTypes.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(241, 421, 160, 50));

        JobsBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgPackage/SettingsJobs.png"))); // NOI18N
        SJobTypes.add(JobsBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 530));

        JTId.setText("jLabel1");
        SJobTypes.add(JTId, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, -1, -1));

        SRoot.add(SJobTypes, "card2");

        getContentPane().add(SRoot, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 828, 530));

        SHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SHomeMouseClicked(evt);
            }
        });
        getContentPane().add(SHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 140, 110));

        SJobs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SJobs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SJobsMouseClicked(evt);
            }
        });
        getContentPane().add(SJobs, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 280, 140, 50));

        SettingsBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgPackage/Settings.png"))); // NOI18N
        getContentPane().add(SettingsBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1026, 682));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void winCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_winCloseMouseClicked
        System.exit(0);
    }//GEN-LAST:event_winCloseMouseClicked

    private void winMinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_winMinMouseClicked
        this.setExtendedState(AttendanceGUI.ICONIFIED);
    }//GEN-LAST:event_winMinMouseClicked

    private void winDragMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_winDragMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_winDragMouseDragged

    private void winDragMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_winDragMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_winDragMousePressed

    private void backHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backHomeMouseClicked
        // TODO add your handling code here:

        new AdminGUI().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backHomeMouseClicked

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBarActionPerformed

    private void SHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SHomeMouseClicked
        SRoot.setVisible(false);

    }//GEN-LAST:event_SHomeMouseClicked

    private void SJobsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SJobsMouseClicked
        // TODO add your handling code here:
        ViewJTList();
        SRoot.setVisible(true);
        SRoot.removeAll();
        SRoot.repaint();
        SRoot.revalidate();
        SRoot.add(SJobTypes);
        SRoot.repaint();
        SRoot.revalidate();

    }//GEN-LAST:event_SJobsMouseClicked

    private void navAttendanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navAttendanceMouseClicked
        // TODO add your handling code here:
        new AttendanceGUI().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_navAttendanceMouseClicked

    private void navAttendanceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navAttendanceMouseEntered
        // TODO add your handling code here:
        ImageIcon img = new ImageIcon(getClass().getResource("/imgPackage/navAttendanceHover.png"));
        navAttendance.setIcon(img);
        navAttendance.setVisible(true);
    }//GEN-LAST:event_navAttendanceMouseEntered

    private void navAttendanceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navAttendanceMouseExited
        // TODO add your handling code here:
        //        ImageIcon img = new ImageIcon(getClass().getResource("/imgPackage/navAttendanceNormal.png"));
        navAttendance.setIcon(null);
        //        navAttendance.setVisible(true);
    }//GEN-LAST:event_navAttendanceMouseExited

    private void JTRatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_JTRatePropertyChange
        
    }//GEN-LAST:event_JTRatePropertyChange

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        // TODO add your handling code here:
        String JTNamex = JTName.getText();
        String JTRatex = JTRate.getText();
        int JTRatexx;
        if(JTNamex.length()== 0 || JTRatex.length() == 0) {
            JOptionPane.showMessageDialog(null, "Fields can't be empty!");
        }
        else if (isNumeric(JTRatex) == false) {
             JOptionPane.showMessageDialog(null, "Rate only accepts numbers!");
    } else {
            JTRatexx = Integer.parseInt(JTRatex); 
            JTName.setText("");
            JTRate.setText("");
            
        try {
            conn = dbC.getConnection();
            stmt = conn.prepareStatement("SELECT * FROM emptype WHERE typeName = ?");
            stmt.setString(1,JTNamex); 
            ResultSet rs = stmt.executeQuery();
            
            if(rs.next()){
                JOptionPane.showMessageDialog(null, "Employee type already exist!");
            } else {

            JOptionPane.showMessageDialog(null, "Succes!");
            
        try {
            conn = dbC.getConnection();
            stmt = conn.prepareStatement("INSERT INTO emptype (typeName, hourlyRate) VALUES (?,?)");
            stmt.setString(1,JTNamex); 
            stmt.setString(2,JTRatexx+"");
            stmt.executeUpdate();
         
        }catch(SQLException se){
      //Handle errors for JDBC
      se.printStackTrace();
        }catch(Exception e){
           //Handle errors for Class.forName
           e.printStackTrace();
        }finally{
           //finally block used to close resources
           try{
              if(stmt!=null)
                 conn.close();
           }catch(SQLException se){
           }// do nothing
           try{
              if(conn!=null)
                 conn.close();
           }catch(SQLException se){
              se.printStackTrace();
           }//end finally try
        }//end try
        ViewJTList();
         }
        }
        catch(SQLException se){
              //Handle errors for JDBC
              se.printStackTrace();
                }catch(Exception e){
                   //Handle errors for Class.forName
                   e.printStackTrace();
                }finally{
           //finally block used to close resources
           try{
              if(stmt!=null)
                 conn.close();
           }catch(SQLException se){
           }// do nothing
           try{
              if(conn!=null)
                 conn.close();
           }catch(SQLException se){
              se.printStackTrace();
           }//end finally try
        }//end try

        
        }

        
        
    }//GEN-LAST:event_addBtnMouseClicked

    private void JobTypesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JobTypesTableMouseClicked
        // TODO add your handling code here:
        int index = JobTypesTable.getSelectedRow();
        ShowItem(index);
    }//GEN-LAST:event_JobTypesTableMouseClicked

    private void updateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseClicked
        // TODO add your handling code here:
        String JTIdx = JTId.getText();
        String JTNamex = JTName.getText();
        String JTRatex = JTRate.getText();
        int JTRatexx;
        if(JTNamex.length()== 0 || JTRatex.length() == 0) {
            JOptionPane.showMessageDialog(null, "Fields can't be empty!");
        }
        else if (isNumeric(JTRatex) == false) {
             JOptionPane.showMessageDialog(null, "Rate only accepts numbers!");
    } else {
            JTRatexx = Integer.parseInt(JTRatex); 
            JTName.setText("");
            JTRate.setText("");
            JOptionPane.showMessageDialog(null, "Updated!!");
        try {
            conn = dbC.getConnection();
            stmt = conn.prepareStatement("UPDATE  emptype set typeName = ?, hourlyRate = ? WHERE id = ?");
            stmt.setString(1,JTNamex); 
            stmt.setString(2,JTRatexx+"");
            stmt.setString(3,JTIdx);
            stmt.executeUpdate();
         
        }catch(SQLException se){
      //Handle errors for JDBC
      se.printStackTrace();
        }catch(Exception e){
           //Handle errors for Class.forName
           e.printStackTrace();
        }finally{
           //finally block used to close resources
           try{
              if(stmt!=null)
                 conn.close();
           }catch(SQLException se){
           }// do nothing
           try{
              if(conn!=null)
                 conn.close();
           }catch(SQLException se){
              se.printStackTrace();
           }//end finally try
        }//end try

     //end main
            JTName.setText(""); 
            JTRate.setText(""); 
            JTId.setText(""); 
        ViewJTList();
         }


        
        
        
    }//GEN-LAST:event_updateBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SettingsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SettingsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SettingsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SettingsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JTId;
    private javax.swing.JTextField JTName;
    private javax.swing.JTextField JTRate;
    private javax.swing.JTable JobTypesTable;
    private javax.swing.JLabel JobsBG;
    private javax.swing.JLabel SHome;
    private javax.swing.JPanel SJobTypes;
    private javax.swing.JLabel SJobs;
    private javax.swing.JPanel SRoot;
    private javax.swing.JLabel SettingsBG;
    private javax.swing.JLabel addBtn;
    private javax.swing.JLabel backHome;
    private javax.swing.JLabel navAttendance;
    private javax.swing.JTextField searchBar;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JLabel updateBtn;
    private javax.swing.JLabel winClose;
    private javax.swing.JLabel winDrag;
    private javax.swing.JLabel winMin;
    // End of variables declaration//GEN-END:variables
}
